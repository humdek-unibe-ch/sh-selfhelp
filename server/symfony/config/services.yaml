# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    # JWT token TTL settings from environment variables
    jwt_token_ttl: '%env(int:JWT_TOKEN_TTL)%'
    jwt_refresh_token_ttl: '%env(int:JWT_REFRESH_TOKEN_TTL)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    
    # API Database Route Loader
    App\Routing\ApiRouteLoader:
        tags: [routing.loader]
        arguments:
            $cache: '@cache.app'
            $env: '%kernel.environment%'
    
    # API Request Logger Services
    App\Service\Core\ApiRequestLoggerService:
        arguments:
            $entityManager: '@doctrine.orm.entity_manager'
            $tokenStorage: '@security.token_storage'
    
    # API Request Logger Listener
    App\EventListener\ApiRequestLoggerListener:
        tags:
            - { name: kernel.event_subscriber }
        arguments:
            $loggerService: '@App\Service\Core\ApiRequestLoggerService'
    
    # Admin Asset Service - needs explicit project directory
    App\Service\CMS\Admin\AdminAssetService:
        arguments:
            $projectDir: '%kernel.project_dir%'
        calls:
            - [setGlobalCacheService, ['@App\Service\Core\GlobalCacheService']]
            - [setCacheInvalidationService, ['@App\Service\Core\CacheInvalidationService']]
    
    # Global Cache Service Configuration
    App\Service\Core\GlobalCacheService:
        arguments:
            $globalCache: '@cache.global'
            $userFrontendCache: '@cache.user_frontend'
            $adminCache: '@cache.admin'
            $lookupsCache: '@cache.lookups'
            $permissionsCache: '@cache.permissions'
    
    # Cache Invalidation Service
    App\Service\Core\CacheInvalidationService:
        arguments:
            $cacheService: '@App\Service\Core\GlobalCacheService'
    
    # Services that use CacheableServiceTrait
    # Frontend Services
    App\Service\CMS\Frontend\PageService:
        calls:
            - [setGlobalCacheService, ['@App\Service\Core\GlobalCacheService']]
            - [setCacheInvalidationService, ['@App\Service\Core\CacheInvalidationService']]
    
    # Core Services
    App\Service\Core\LookupService:
        calls:
            - [setGlobalCacheService, ['@App\Service\Core\GlobalCacheService']]
            - [setCacheInvalidationService, ['@App\Service\Core\CacheInvalidationService']]
    
    App\Service\Core\JobSchedulerService:
        calls:
            - [setGlobalCacheService, ['@App\Service\Core\GlobalCacheService']]
            - [setCacheInvalidationService, ['@App\Service\Core\CacheInvalidationService']]
    
    # Admin Services - All entities
    App\Service\CMS\Admin\AdminPageService:
        calls:
            - [setGlobalCacheService, ['@App\Service\Core\GlobalCacheService']]
            - [setCacheInvalidationService, ['@App\Service\Core\CacheInvalidationService']]
    
    App\Service\CMS\Admin\AdminUserService:
        calls:
            - [setGlobalCacheService, ['@App\Service\Core\GlobalCacheService']]
            - [setCacheInvalidationService, ['@App\Service\Core\CacheInvalidationService']]
    
    App\Service\CMS\Admin\AdminSectionService:
        calls:
            - [setGlobalCacheService, ['@App\Service\Core\GlobalCacheService']]
            - [setCacheInvalidationService, ['@App\Service\Core\CacheInvalidationService']]
    
    App\Service\CMS\Admin\AdminGroupService:
        calls:
            - [setGlobalCacheService, ['@App\Service\Core\GlobalCacheService']]
            - [setCacheInvalidationService, ['@App\Service\Core\CacheInvalidationService']]
    
    App\Service\CMS\Admin\AdminRoleService:
        calls:
            - [setGlobalCacheService, ['@App\Service\Core\GlobalCacheService']]
            - [setCacheInvalidationService, ['@App\Service\Core\CacheInvalidationService']]
    
    App\Service\CMS\Admin\AdminGenderService:
        calls:
            - [setGlobalCacheService, ['@App\Service\Core\GlobalCacheService']]
            - [setCacheInvalidationService, ['@App\Service\Core\CacheInvalidationService']]
    

    
    App\Service\CMS\Admin\AdminScheduledJobService:
        calls:
            - [setGlobalCacheService, ['@App\Service\Core\GlobalCacheService']]
            - [setCacheInvalidationService, ['@App\Service\Core\CacheInvalidationService']]
    
    App\Service\CMS\Admin\AdminActionService:
        calls:
            - [setGlobalCacheService, ['@App\Service\Core\GlobalCacheService']]
            - [setCacheInvalidationService, ['@App\Service\Core\CacheInvalidationService']]
    
    App\Service\CMS\Admin\AdminCmsPreferenceService:
        calls:
            - [setGlobalCacheService, ['@App\Service\Core\GlobalCacheService']]
            - [setCacheInvalidationService, ['@App\Service\Core\CacheInvalidationService']]
    
    App\Service\Auth\UserPermissionCacheService:
        calls:
            - [setGlobalCacheService, ['@App\Service\Core\GlobalCacheService']]
            - [setCacheInvalidationService, ['@App\Service\Core\CacheInvalidationService']]